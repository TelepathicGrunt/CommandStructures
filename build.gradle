import net.fabricmc.loom.task.RemapJarTask

buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.2.1'
	}
}
plugins {
	id "net.darkhax.curseforgegradle" version "1.0.7"
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.1.0'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = "${project.modid}_fabric"
group = project.maven_group

repositories {}
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings minecraft.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from "LICENSE.txt"
}

apply from: 'gradle/maven.gradle'
apply from: 'gradle/modrinth.gradle'
task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = "$System.env.CURSEFORGEKEY"
	int projectId = 565119
	String changelogText = new File("CHANGELOG.md").getText('UTF-8')

	def mainFile = upload(projectId, remapJar)
	mainFile.changelog = changelogText
	mainFile.changelogType = "markdown"
	mainFile.releaseType = "release"
	mainFile.displayName = "CommandStructures-Fabric v${project.mod_version} (${project.minecraft_version} MC)"
}

task buildAndRelease {}
tasks.publish.mustRunAfter tasks.build
tasks.publishCurseForge.mustRunAfter tasks.publish
tasks.publishModrinth.mustRunAfter tasks.publish
tasks.publishCurseForge.dependsOn("remapJar")
tasks.buildAndRelease.dependsOn(tasks.build, tasks.publish, tasks.publishCurseForge, tasks.publishModrinth)
